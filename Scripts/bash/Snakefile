configfile: "config.yaml"

# Remember to be in motus enviroment in Conda before running Snakemake
# source activate /c3se/NOBACKUP/users/angelol/motus

# Required packages:
# conda install -c bioconda fastp
# conda install -c bioconda -c conda-forge snakemake-minimal
# conda install -c bioconda motus


import os
import glob

PATH = "/c3se/NOBACKUP/users/angelol/data/"

# Extract sample names
PATH_fastq = "/c3se/NOBACKUP/users/angelol/data/" + 'fastqfiles/ERR*'
SAMPLES = sorted([os.path.splitext(val)[0] for val in (glob.glob(PATH_fastq))]) #Remove .gz from filename path
SAMPLES = [os.path.splitext(val)[0] for val in SAMPLES]
SAMPLES = [os.path.basename(val) for val in SAMPLES]
SAMPLES = [x[:-2] for x in SAMPLES]
SAMPLES = list(set(SAMPLES))

rule all:
    input:
        "MOTUS2worked.txt"
    output:
        "dag.svg"
    shell:
        """
        snakemake --dag | dot -Tsvg > {output}
        """

rule fastp_filter:
    input:
        R1 = config["paths"]["raw_reads"] + "{sample}_1.fastq.gz",
        R2 = config["paths"]["raw_reads"] + "{sample}_2.fastq.gz"
    output:
        R1 = config["paths"]["filtered_reads"] + "{sample}_1_filtered.fastq.gz",
        R2 = config["paths"]["filtered_reads"] + "{sample}_2_filtered.fastq.gz"
    params:
        logs_json = "temp.json",
        logs_html = "temp.html"
    threads: 4
    shell:
        """
        cp {input.R1} {input.R2} $TMPDIR
        cd $TMPDIR
        inputR1=`basename {input.R1}`
        inputR2=`basename {input.R2}`
        outputR1=`basename {output.R1}`
        outputR2=`basename {output.R2}`
        fastp --thread {threads} --correction --in1 $inputR1 --in2 $inputR2 --out1 $outputR1 --out2 $outputR2 -j {params.logs_json} -h {params.logs_html}
        cp $outputR1 $outputR2 {config[paths][filtered_reads]}
        """

rule calculate_abundances:
    input:
        R1 = config["paths"]["filtered_reads"] + "{sample}_1_filtered.fastq.gz",
        R2 = config["paths"]["filtered_reads"] + "{sample}_2_filtered.fastq.gz"
    output:
        config["paths"]["motusfiles"] + "{sample}.motus"
    threads: 4
    shell:
        """
        cp {input.R1} {input.R2} $TMPDIR
        cd $TMPDIR
        inputR1=`basename {input.R1}`
        inputR2=`basename {input.R2}`
        output=`basename {output}`
        motus profile -f $inputR1 -r $inputR2 -o $output -n {wildcards.sample} -t {threads}
        cp $output {config[paths][motusfiles]}
        """
# Run motus merge -d $motus_directory on the produced files

rule final_output:
    input:
        expand(config["paths"]["motusfiles"] + "{sample}.motus", sample=SAMPLES)
    output:
        report = "MOTUS2worked.txt"
    shell:
        "touch {output.report}"
